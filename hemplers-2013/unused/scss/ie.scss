@import "site";

/******************************************************************
Stylesheet: IE Stylesheet

So instead of using the respond.js file to add media query support
to IE, we're going to use SASS to create an easily readable css file.
Here, we import all the styles the standard stylesheet gets, only
without the media queries. No need to worry about editing anything!

******************************************************************/

/*
Remember, all the BASE styles are called already since IE can
read those. Below, we need to import only the stuff IE can't 
understand (what's inside the media queries). We also need to
import the mixins file so SASS can understand the variables.
*/

/* import mixins */
@import "mixins";

@import "481up";
@import "768up";
@import "1030up";

/* 
you can call the larger styles if you want, but there's really no need 
*/


/******************************************************************
ADDITIONAL IE FIXES
These fixes are now ONLY seen by IE, so you don't have to worry
about using prefixes, although it's best practice. For more info
on using Modernizr classes, check out this link:
http://www.modernizr.com/docs/
******************************************************************/

/*
For example, you can use something like:

.no-textshadow .class { ... }

You can also target specific versions by using the classes applied to
the html element. These can sometimes change, so take a look inside the
header.php file to see what they are:


.lt-ie8 .class { ... }

*/

/* IE FIXES
I'm going to compile IE fixes as I come across them below as a reference in case needed:

INLINE BLOCK IN IE 6/7
  display: inline-block;
CHANGE TO
  display: inline-block;  // inline-block is half-supported in IE7, unsupported in IE6
  *display: inline;       //  asterisked CSS is only used in IE6/7, and inline is supported
  *zoom: 1;               // zoom causes inline to behave like inline-block

*/